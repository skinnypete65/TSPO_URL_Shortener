// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	dto "api_gateway/internal/transport/rest/dto"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AnalyticsClient is an autogenerated mock type for the AnalyticsClient type
type AnalyticsClient struct {
	mock.Mock
}

// GetTopUrls provides a mock function with given fields: ctx, page, limit
func (_m *AnalyticsClient) GetTopUrls(ctx context.Context, page int64, limit int64) (dto.TopURLDataResponse, error) {
	ret := _m.Called(ctx, page, limit)

	if len(ret) == 0 {
		panic("no return value specified for GetTopUrls")
	}

	var r0 dto.TopURLDataResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, int64) (dto.TopURLDataResponse, error)); ok {
		return rf(ctx, page, limit)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64, int64) dto.TopURLDataResponse); ok {
		r0 = rf(ctx, page, limit)
	} else {
		r0 = ret.Get(0).(dto.TopURLDataResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64, int64) error); ok {
		r1 = rf(ctx, page, limit)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAnalyticsClient creates a new instance of AnalyticsClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAnalyticsClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *AnalyticsClient {
	mock := &AnalyticsClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
